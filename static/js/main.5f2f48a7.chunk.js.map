{"version":3,"sources":["Components/Element/Element.js","Components/Arena/Arena.js","Components/Scores/Scores.js","ErrorBoundary.js","Config.js","Empty.js","Mushrooms.js","Bugs.js","Centipede.js","Missles.js","App.js","Player.js","reportWebVitals.js","index.js","Components/Element/Element.module.css","Components/Scores/Scores.module.css","Components/Arena/Arena.module.css"],"names":["Element","props","console","log","content","classes","background","className","id","React","memo","Arena","items","arena","map","x","line","xx","Scores","score","scores","logo","ErrorBoundary","state","hasError","error","this","setState","children","Component","xSize","ySize","empty","mushroom_item","isMushroom","y","mushrooms","placeMushroom","cx","cy","game_arena","removeMushroom","initBug","Math","floor","random","direction","speed","tick","initBugs","bugs","push","moveBug","bug","to_remove","posx","posy","removeBugs","placeBugs","moveCentipedeItem","item","next_x","next_y","removeCentipedeItem","centipedes","centipede","filter","moveCentipede","removeCentipede","segment","undefined","length","size","initCentipede","showCentipede","moveMissle","missle","moveMissles","removeMissles","newPositions","missles","obj","placeMissles","player_x","player_y","addMissle","prepareInitialState","yLine","prepareInitialMushrooms","player_is_alive","game_is_over","prepareArena","placePlayer","mushroom","placeMushrooms","processGameState","action","TYPE","next_state","moveBugs","segments","find","detectCollisions","position","movePlayer","initialState","App","useReducer","gameState","gameStateDispatch","useEffect","interval","window","setInterval","onkeydown","event","code","clearInterval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.5f2f48a7.chunk.js","sourcesContent":["import React from 'react'\nimport classes from './Element.module.css'\nconst Element = (props) => {\n\n    console.log(\"Element!\");\n\n    //const content = `${classes['game-item']} ${classes[props.background]} ${classes['image']} ${classes['bug']} `\n    const content = `${classes['game-item']} ${classes[props.background]} ${classes['image']} ${props.content !== 'empty' && classes[props.content]} `;\n    \n\n\n    return (\n        <div key={props.id} className={content} ></div>\n    );\n}\n\nexport default React.memo(Element);\n","import React from \"react\";\nimport Element from \"../Element/Element\";\nimport classes from \"./Arena.module.css\";\n\nconst Arena = (props) => {\n\n  \n\nlet items = props.arena.map((x) => {\n    return <div key={x.id} className={classes.line}>\n      {x.items.map((xx) => {\n        return <Element key={xx.id} background={xx.background} content={xx.content}/>;\n      })}\n    </div>;\n  });\n\n  return (\n    <>\n      {\n          items\n      }\n    </>\n  );\n};\n\nexport default Arena;\n","import React from 'react'\nimport classes from './Scores.module.css'\n\nconst Scores = props => {\n    const score = `Score : ${props.score}`;\n    console.log(score);\n    return(\n        <div>\n            <div className={classes.scores}>{score}</div>\n            <div className={classes.logo}>Centipede</div>\n        </div>\n    );\n\n}\n\nexport default Scores;","import {Component} from 'react'\n\nclass ErrorBoundary extends Component {\n    constructor() {\n        super();\n        this.state = {hasError : false}\n    }\n\n    componentDidCatch(error){\n        this.setState({hasError : true});\n    }\n\n    render(){\n        if(this.state.hasError === true){\n            return <p>Something was wrong...</p>\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","export const xSize = 20;\nexport const ySize = 20;\nexport const missles_amount = 20;","export const empty = 'empty'","import { empty } from \"./Empty\";\n\nexport const mushroom_item = \"mushroom\";\nconst mushroom_place_ratio = 0.001;\n\nconst prepareItems = () => {\n  const rnd = Math.random();\n  if (rnd < mushroom_place_ratio) {\n    return mushroom_item;\n  }\n  return empty;\n};\n\nexport const prepareInitialMushrooms = (cx, cy) => {\n  let mushrooms = [];\n  for (let y = 0; y < cy; y++) {\n    let yLine = [];\n    for (let x = 0; x < cx; x++) {\n      yLine.push(prepareItems() === mushroom_item ? 1 : 0);\n    }\n    mushrooms.push(yLine);\n  }\n  return mushrooms;\n};\n\nexport const isMushroom = (x, y, state) => {\n  let item = state.mushrooms[x][y];\n  if (item === 1) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport const placeMushroom = (cx, cy, state) => {\n  state.game_arena[cx].items[cy].content = mushroom_item;\n  state.mushrooms[cx][cy] = 1;\n};\n\nexport const removeMushroom = (cx, cy, state) => {\n  state.game_arena[cx].items[cy].content = empty;\n  state.mushrooms[cx][cy] = 0;\n};\n\nexport const placeMushrooms = (state) => {\n  for (let x in state.mushrooms) {\n    for (let y in state.mushrooms[x]) {\n      const mushroom = state.mushrooms[x][y];\n      state.game_arena[x].items[y].content =\n        mushroom === 1 ? mushroom_item : empty;\n    }\n  }\n  return state;\n};\n","import { xSize } from \"./Config\";\nimport { empty } from \"./Empty\";\nimport { placeMushroom } from \"./Mushrooms\"; \n\n\n export const initBug = () => {\n    const y = Math.floor(Math.random() * 18);\n    let x = 0;\n    const direction = Math.random() < 0.5 ? \"bugleft\" : \"bugright\";\n    const speed = Math.floor(1 + Math.random() * 3);\n    if (direction === \"bugleft\") {\n      x = xSize - 1;\n    } else {\n      x = 0;\n    }\n  \n    return { x: x, y: y, direction: direction, speed: speed, tick: 1 };\n  };\n  \n  export const initBugs = (x, y) => {\n    let bugs = [];\n    for (let x = 0; x < 5; x++) {\n      bugs.push(initBug());\n    }\n    return bugs;\n  };\n\n  export const moveBug = (bug) => {\n    if (bug.to_remove === true) {\n      return initBug();\n    }\n    let posx = bug.x;\n    let posy = bug.y;\n    bug.tick++;\n    if (bug.tick > bug.speed) {\n      if (bug.direction === \"bugleft\") {\n        posx = posx - 1;\n        if (posx < 0) {\n          return initBug();\n        }\n      } else {\n        posx = posx + 1;\n        if (posx > xSize - 1) {\n          return initBug();\n        }\n      }\n      bug.tick = 1;\n    }\n    return {\n      x: posx,\n      y: posy,\n      direction: bug.direction,\n      speed: bug.speed,\n      tick: bug.tick,\n    };\n  };\n\n  export const moveBugs = (state) => {\n    removeBugs(state);\n  \n    let newPositions = [];\n    for (let bug of state.bugs) {\n      newPositions.push(moveBug(bug));\n    }\n    state.bugs = newPositions;\n    placeBugs(state);\n    return state.bugs;\n  };\n  \n  export const removeBugs = (state) => {\n    for (let bug of state.bugs) {\n      if (Math.random() < 0.4) {\n        placeMushroom(bug.x, bug.y, state);\n      } else {\n        state.game_arena[bug.x].items[bug.y].content = empty;\n      }\n    }\n    return state;\n  };\n\n  export const placeBugs = (state) => {\n    for (let bug of state.bugs) {\n      state.game_arena[bug.x].items[bug.y].content = bug.direction;\n    }\n    return state;\n  };\n  \n  ","import { xSize, ySize } from \"./Config\";\nimport { empty } from \"./Empty\";\nimport { isMushroom, removeMushroom, placeMushroom } from \"./Mushrooms\";\n\nconst initCentipede = () => {\n    let centipede = [];\n    const direction = Math.random() > 0.5 ? \"right\" : \"left\";\n    const size = 5 + Math.floor(Math.random() * 7);\n    for (let cx = 0; cx < size; cx++) {\n      if (direction === \"right\") {\n        let segment = {\n          x: xSize - size + cx,\n          y: 0,\n          direction: -1,\n          speed: 1 + Math.floor(Math.random() * 3),\n          tick: 1,\n        };\n        centipede.push(segment);\n      } else {\n        let segment = {\n          x: cx,\n          y: 0,\n          direction: 1,\n          speed: 1 + Math.floor(Math.random() * 3),\n          tick: 1,\n        };\n        centipede.push(segment);\n      }\n    }\n    return centipede;\n  };\n  \n  \n  \n  const moveCentipedeItem = (item, state) => {\n    item.tick++;\n  \n    let next_x = item.x + item.direction;\n    let next_y = item.y;\n    if (item.tick > item.speed) {\n      if (next_x >= 0 && next_x < xSize) {\n        if (isMushroom(next_x, next_y, state)) {        \n          next_y = next_y + 1;\n          next_x = item.x;\n          if (next_y === ySize) {\n            return undefined;\n          }\n          if (isMushroom(next_x, next_y, state)) {\n            item.direction = -item.direction;\n          }\n          removeMushroom(next_x, next_y, state);\n        }\n      } else {\n        next_y = next_y + 1;\n        next_x = item.x;\n        if (next_y === ySize) {\n          return undefined;\n        }\n        item.direction = -item.direction;\n        removeMushroom(next_x, next_y, state);\n      }\n    }\n    return {\n      x: next_x,\n      y: next_y,\n      direction: item.direction,\n      tick: item.tick,\n      speed: item.speed,\n    };\n  };\n  \n  export const removeCentipedeItem = (item, state) => {\n    let centipedes = state.centipede.filter((x) => x !== item);\n    placeMushroom(item.x, item.y, state);\n    return centipedes;\n  };\n  \n  export const moveCentipede = (state) => {\n    let centipede = [];\n    removeCentipede(state);\n    for (let item of state.centipede) {\n      let segment = moveCentipedeItem(item, state);\n      if (segment !== undefined) {\n        centipede.push(segment);\n      }\n    }\n    if (centipede.length === 0) {\n      centipede = initCentipede();\n    }\n    state.centipede = centipede;\n    showCentipede(state);\n    return centipede;\n  };\n  \n  export const removeCentipede = (state) => {\n    for (let item of state.centipede) {\n      state.game_arena[item.x].items[item.y].content = empty;\n    }\n  };\n  \n  const showCentipede = (state) => {\n    for (let item of state.centipede) {\n      state.game_arena[item.x].items[item.y].content =\n        item.direction === \"right\" ? \"ant-right\" : \"ant-left\";\n    }\n  };","import {empty} from \"./Empty\";\n\nconst moveMissle = (state, missle) => {\n  if (missle.to_remove === true) {\n    return undefined;\n  }\n  let posx = missle.x;\n  let posy = missle.y;\n  if (posy > 0) {\n    posy = posy - 1;\n    return { x: posx, y: posy };\n  } else {\n    return undefined;\n  }\n};\n\n\nconst placeMissles = (state) => {\n    for (let missle of state.missles) {\n      state.game_arena[missle.x].items[missle.y].content = \"missle\";\n    }\n    return state;\n  };\n\nexport const moveMissles = (state) => {\n  removeMissles(state);\n  let newPositions = [];\n  for (let missle of state.missles) {\n    const obj = moveMissle(state, missle);\n    if (obj !== undefined) {\n      newPositions.push(obj);\n    }\n  }\n  state.missles = newPositions;\n  placeMissles(state);\n  return newPositions;\n};\n\nexport const removeMissles = (state) => {\n  for (let missle of state.missles) {\n    if (state.player_x === missle.x && state.player_y === missle.y) {\n      break;\n    }\n    state.game_arena[missle.x].items[missle.y].content = empty;\n  }\n  return state;\n};\n\nexport const addMissle = (state) => {\n  state.missles.push({ x: state.player_x, y: state.player_y });\n  return state.missles;\n};\n","import \"./App.css\";\nimport Arena from \"./Components/Arena/Arena\";\nimport Scores from \"./Components/Scores/Scores\";\nimport React, { useEffect, useReducer } from \"react\";\nimport ErrorBoundary from \"./ErrorBoundary\"\nimport { initBugs, moveBugs, placeBugs } from \"./Bugs\";\nimport { prepareInitialMushrooms , placeMushrooms, removeMushroom} from \"./Mushrooms\";\nimport { removeCentipedeItem, moveCentipede} from \"./Centipede\";\nimport { xSize, ySize, missles_amount } from \"./Config\";\nimport { empty } from \"./Empty\"; \nimport { moveMissles, addMissle } from \"./Missles\"\nimport { movePlayer,placePlayer } from \"./Player\";\n\n\nconst prepareArena = (cx, cy, mushrooms) => {\n  let arena = [];\n  for (let y = 0; y < cy; y++) {\n    let yLine = { id: y, items: [] };\n    for (let x = 0; x < cx; x++) {\n      yLine.items.push({\n        background: Math.random() < 0.5 ? \"green\" : \"yellow\",\n        content: empty,\n        id: y * 1000 + x * 3,\n      });\n    }\n    arena.push(yLine);\n  }\n  return arena;\n};\n\n\nconst prepareInitialState = () => {\n  const mushrooms = prepareInitialMushrooms(xSize, ySize);\n  const arena = prepareArena(xSize, ySize);\n  let state = {\n    player_is_alive: true,\n    game_is_over: false,\n    game_arena: arena,\n    player_x: xSize / 2,\n    player_y: ySize - 1,\n    score: 0,\n    bugs: initBugs(),\n    missles: [],\n    centipede: [],\n    mushrooms: mushrooms,\n  };\n  state = placeBugs(state);\n  state = placeMushrooms(state);\n  state = placePlayer(state);\n  return state;\n};\n\n\n\n\n\n\n\nconst detectCollisions = (state) => {\n  //1. does missle hit a bug\n  for (let missle of state.missles) {\n    let bugs = state.bugs.filter(\n      (bug) => bug.x === missle.x && bug.y === missle.y\n    );\n    if (bugs.length > 0) {\n      missle.to_remove = true;\n      for (let bug of bugs) {\n        bug.to_remove = true;\n      }\n      state.score += 10;\n    }\n  }\n  //2 does missle hit a mushroom\n  for (let missle of state.missles) {\n    if (state.mushrooms[missle.x][missle.y] === 1) {\n      missle.to_remove = true;\n      removeMushroom(missle.x, missle.y, state);\n      state.score += 1;\n    }\n  }\n\n  for (let missle of state.missles) {\n    let segments = state.centipede.filter(\n      (segment) => segment.x === missle.x && segment.y === missle.y\n    );\n    if (segments.length > 0) {\n      state.score += 25;\n      for (let segment of segments) {\n        state.centipede = removeCentipedeItem(segment, state);\n      }\n    }\n  }\n\n  const isUserDead =\n    state.centipede.find(\n      (x) => x.x === state.player_x && x.y === state.player_y\n    ) !== undefined;\n  if (isUserDead) {\n    state.player_is_alive = false;\n  }\n};\n\n\nconst processGameState = (state, action) => {\n  if (action.TYPE === \"tick\") {\n    if (state.player_is_alive) {\n      let next_state = { ...state };\n      next_state.missles = moveMissles(state);\n      next_state.bugs = moveBugs(state);\n      next_state.centipede = moveCentipede(state);\n      detectCollisions(next_state);\n\n      return next_state;\n    } else {\n      let next_state = prepareInitialState();\n      return next_state;\n    }\n  } else if (action.TYPE === \"usermove\") {\n    var position = movePlayer(action.direction, state);\n    return {\n      ...state,\n      player_x: position.x,\n      player_y: position.y,\n    };\n  } else if (action.TYPE === \"fire\") {\n    if (state.missles.length < missles_amount) {\n      return {\n        ...state,\n        missles: addMissle(state),\n      };\n    }\n  }\n  return state;\n};\n\nconst speed = 100;\n\nconst initialState = prepareInitialState();\n\nfunction App() {\n  const [gameState, gameStateDispatch] = useReducer(\n    processGameState,\n    initialState\n  );\n\n  useEffect(() => {\n    let interval = window.setInterval(() => {\n      gameStateDispatch({ TYPE: \"tick\" });\n    }, speed);\n    window.onkeydown = (event) => {\n      if (event.code === \"ArrowRight\") {\n        gameStateDispatch({ TYPE: \"usermove\", direction: \"right\" });\n      } else if (event.code === \"ArrowLeft\") {\n        gameStateDispatch({ TYPE: \"usermove\", direction: \"left\" });\n      } else if (event.code === \"ArrowUp\") {\n        gameStateDispatch({ TYPE: \"usermove\", direction: \"up\" });\n      } else if (event.code === \"ArrowDown\") {\n        gameStateDispatch({ TYPE: \"usermove\", direction: \"down\" });\n      } else if (event.code === \"Space\") {\n        gameStateDispatch({ TYPE: \"fire\" });\n      }\n    };\n    return () => clearInterval(interval);\n  }, []);\n\n  const { game_arena } = gameState;\n  const { score } = gameState;\n  return (\n    <div className=\"game\">\n      <Scores score={score} />\n      <ErrorBoundary>\n        <Arena arena={game_arena} />\n      </ErrorBoundary>\n    </div>\n  );\n}\n\nexport default App;\n","import { xSize, ySize } from \"./Config\";\nimport { empty } from \"./Empty\";\n\nconst isMovePossible = (item) => {\n    if (item === \"empty\" || item === \"player\") {\n      return true;\n    }\n    return false;\n  };\n  \n  export const movePlayer = (direction, state) => {\n    let position = { x: state.player_x, y: state.player_y };\n    if (direction === \"right\") {\n      position.x =\n        state.player_x + 1 < xSize ? state.player_x + 1 : state.player_x;\n    } else if (direction === \"left\") {\n      position.x = state.player_x - 1 >= 0 ? state.player_x - 1 : state.player_x;\n    } else if (direction === \"up\") {\n      position.y =\n        state.player_y - 1 >= ySize - 2 ? state.player_y - 1 : state.player_y;\n    } else if (direction === \"down\") {\n      position.y =\n        state.player_y + 1 < xSize ? state.player_y + 1 : state.player_y;\n    }\n  \n    if (position.x !== state.player_x || position.y !== state.player_y) {\n      if (\n        isMovePossible(state.game_arena[position.x].items[position.y].content)\n      ) {\n        state.game_arena[state.player_x].items[state.player_y].content = empty;\n        state.game_arena[position.x].items[position.y].content = \"player\";\n      } else {\n        console.log(\n          \"collision \" + state.game_arena[position.x].items[position.y].content\n        );\n      }\n    }\n  \n    return position;\n  };\n  \n\nexport const placePlayer = (state) => {\n  state.game_arena[state.player_x].items[state.player_y].content = \"player\";\n  return state;\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n    <App />\n    ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"game-item\":\"Element_game-item__2eEt5\",\"yellow\":\"Element_yellow__14iBl\",\"green\":\"Element_green__CaUlM\",\"image\":\"Element_image__dlefQ\",\"ant-left\":\"Element_ant-left__3iv_n\",\"ant-right\":\"Element_ant-right__GjDN7\",\"mushroom\":\"Element_mushroom__1tiTG\",\"missle\":\"Element_missle__3Gc0T\",\"player\":\"Element_player__3VYnt\",\"bugleft\":\"Element_bugleft__3Qc8j\",\"bugright\":\"Element_bugright__2p_Vl\",\"stage1\":\"Element_stage1__xd45m\",\"stage2\":\"Element_stage2__2gNWE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scores\":\"Scores_scores__qFD0D\",\"logo\":\"Scores_logo__1NA7S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"Arena_line__2yT2B\"};"],"sourceRoot":""}